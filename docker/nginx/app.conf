fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=fastcgi_cache:100m max_size=10g inactive=60d use_temp_path=off;
fastcgi_cache_key "$scheme$request_method$host$request_uri";

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    server_name new.ruwordnet.ru;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/new.ruwordnet.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/new.ruwordnet.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/new.ruwordnet.ru/chain.pem;

    root /var/www/html/web;

    index index.php;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)$ {
        access_log off;
        expires 60d;
        add_header Cache-Control public;

        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120m;
        open_file_cache_valid 45m;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    location ~ ^/index\.php(/|$)$ {
        add_header X-Cache-Status $upstream_cache_status;
        fastcgi_buffering on;
        fastcgi_cache fastcgi_cache;
        fastcgi_cache_lock on;
        fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
        fastcgi_cache_valid 200 60d;

        fastcgi_ignore_headers X-Accel-Expires;
        fastcgi_ignore_headers Expires;
        fastcgi_ignore_headers Cache-Control;
        fastcgi_ignore_headers Set-Cookie;

        fastcgi_hide_header X-Accel-Expires;
        fastcgi_hide_header Expires;
        fastcgi_hide_header Cache-Control;
        fastcgi_hide_header Set-Cookie;
        fastcgi_hide_header Pragma;

        fastcgi_pass app:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
    }

    location ~ \.php {
        return 404;
    }
}
